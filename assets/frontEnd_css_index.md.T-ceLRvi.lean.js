import{_ as a,c as i,a3 as n,o as t}from"./js/framework-ohJJpums.js";const l="/assets/png/image-6-CovadhvL.png",e="/assets/png/image-7-XADV-Ffv.png",p="/assets/png/image-2-CphUnxDJ.png",E=JSON.parse('{"title":"CSS 基础语法和核心特性","description":"CSS层叠样式表基础知识，包含语法特性、优先级、嵌套、坐标系、背景属性等核心概念","frontmatter":{"title":"CSS 基础语法和核心特性","description":"CSS层叠样式表基础知识，包含语法特性、优先级、嵌套、坐标系、背景属性等核心概念","outline":"deep"},"headers":[],"relativePath":"frontEnd/css/index.md","filePath":"frontEnd/css/index.md","lastUpdated":1751249365000}'),r={name:"frontEnd/css/index.md"};function d(h,s,k,c,o,b){return t(),i("div",null,s[0]||(s[0]=[n(`<h1>🎨 CSS 基础语法和核心特性</h1><p>层叠样式表（<strong>Cascading Style Sheets，CSS</strong>）是一种样式表语言，用来描述 HTML 或 XML 文档的呈现方式。CSS 是开放 Web 的核心语言之一，并根据 W3C 规范在 Web 浏览器中进行了标准化。</p><div class="tip custom-block"><p class="custom-block-title">📚 本章内容</p><p>深入学习 CSS 的核心概念、语法特性和实用技巧，掌握现代 CSS 开发的最佳实践。</p></div><h2 id="-css-" tabindex="-1">🏆 CSS 样式优先级 <a class="header-anchor" href="#-css-" aria-label="Permalink to &quot;🏆 CSS 样式优先级&quot;">​</a></h2><p>CSS 样式优先级决定了哪个样式规则最终会被应用到元素上。理解优先级对于有效管理样式至关重要。</p><h3 id="-" tabindex="-1">⚖️ 优先级规则 <a class="header-anchor" href="#-" aria-label="Permalink to &quot;⚖️ 优先级规则&quot;">​</a></h3><table tabindex="0"><thead><tr><th>优先级</th><th>类型</th><th>权重值</th><th>示例</th></tr></thead><tbody><tr><td><strong>1</strong></td><td><code>!important</code></td><td>最高</td><td><code>color: red !important;</code></td></tr><tr><td><strong>2</strong></td><td>内联样式</td><td>1000</td><td><code>&lt;div style=&quot;color: blue;&quot;&gt;</code></td></tr><tr><td><strong>3</strong></td><td>ID 选择器</td><td>100</td><td><code>#header { color: green; }</code></td></tr><tr><td><strong>4</strong></td><td>类选择器</td><td>10</td><td><code>.nav { color: purple; }</code></td></tr><tr><td><strong>5</strong></td><td>标签选择器</td><td>1</td><td><code>div { color: black; }</code></td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">⚠️ 优先级计算</p><p>内联样式优先于所有普通样式，无论其优先级如何。同优先级的样式，书写顺序在后面的会覆盖前面的。</p></div><h3 id="-cascade-layers-" tabindex="-1">📊 级联层（Cascade Layers） <a class="header-anchor" href="#-cascade-layers-" aria-label="Permalink to &quot;📊 级联层（Cascade Layers）&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 定义级联层顺序 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer1, layer2;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 不同级联层的优先级：匿名级联层 &gt; layer2 &gt; layer1 */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>优先级总结</strong>：在统一级联层时：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>!important &gt; 内联样式 &gt; ID &gt; Class &gt; 标签</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>不同级联层时：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>匿名级联层 &gt; layer2 &gt; layer1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="-css--1" tabindex="-1">🔗 CSS 嵌套 <a class="header-anchor" href="#-css--1" aria-label="Permalink to &quot;🔗 CSS 嵌套&quot;">​</a></h2><p>CSS 嵌套类似于 Sass 预处理器，但它是被浏览器直接解析的现代 CSS 特性。</p><div class="info custom-block"><p class="custom-block-title">💡 嵌套特点</p><p><code>&amp;</code> 嵌套选择器的优先级类似于 <code>:is()</code> 函数，由关联选择器列表中优先级最高的选择器决定。</p></div><h3 id="--1" tabindex="-1">🎯 嵌套语法示例 <a class="header-anchor" href="#--1" aria-label="Permalink to &quot;🎯 嵌套语法示例&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.myClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 使用嵌套选择器 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &amp;:hover {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 嵌套和组合关系选择器 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等价于 .myClass.b */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 嵌套关系选择器 等价于 &amp; + p */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  +</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* &amp; 嵌套选择器添加到选择器后方，反转上下文 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* .bar .myClass 的样式 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 元素拼接（会被解析为 element.myClass） */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  element&amp; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 样式规则 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ⚠️ 无效语法：%在选择器中无效，规则将被忽略 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &amp; %invalid {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 无效样式，全部被忽略 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ⚠️ CSS 不支持 BEM 风格的拼接 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &amp;__child-element {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 不推荐使用 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 可以嵌套媒体查询 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">orientation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">landscape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    grid-auto-flow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: column;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      max-inline-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 1024px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 可以嵌套级联层 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> base {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等价于 @layer base .myClass */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    block-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 100%;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> support {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      /* 等价于 @layer base.support .myClass .bar */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        min-block-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h2 id="-css--2" tabindex="-1">📐 CSS 坐标系 <a class="header-anchor" href="#-css--2" aria-label="Permalink to &quot;📐 CSS 坐标系&quot;">​</a></h2><p>CSS 对象模型使用四种标准坐标系，理解这些坐标系对于处理定位和事件至关重要。</p><p><img src="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSSOM_view/Coordinate_systems/css-coords.svg" alt="坐标系"></p><h3 id="--2" tabindex="-1">🌍 四种坐标系统 <a class="header-anchor" href="#--2" aria-label="Permalink to &quot;🌍 四种坐标系统&quot;">​</a></h3><table tabindex="0"><thead><tr><th>坐标系</th><th>原点位置</th><th>特点</th><th>相关属性</th></tr></thead><tbody><tr><td><strong>屏幕坐标系</strong></td><td>用户屏幕左上角</td><td>逻辑像素，整数递增</td><td><code>screenX</code>, <code>screenY</code></td></tr><tr><td><strong>页面坐标系</strong></td><td>整个文档左上角</td><td>相对于完整文档</td><td><code>pageX</code>, <code>pageY</code></td></tr><tr><td><strong>视口坐标系</strong></td><td>浏览器窗口左上角</td><td>可视区域坐标</td><td><code>clientX</code>, <code>clientY</code></td></tr><tr><td><strong>偏移坐标系</strong></td><td>目标元素左上角</td><td>相对于事件元素</td><td><code>offsetX</code>, <code>offsetY</code></td></tr></tbody></table><h4>1. 🖥️ 屏幕坐标系（Screen）</h4><ul><li><strong>原点</strong>：用户屏幕空间的左上角</li><li><strong>特点</strong>：每个坐标都代表一个逻辑像素</li><li><strong>用途</strong>：Mouse 事件和 Touch 事件</li></ul><h4>2. 📄 页面坐标系（Page）</h4><ul><li><strong>原点</strong>：整个渲染文档的左上角</li><li><strong>特点</strong>：滚动后元素位置保持不变（除非布局改变）</li><li><strong>用途</strong>：绝对定位计算</li></ul><h4>3. 🔲 视口坐标系（Window/Client）</h4><ul><li><strong>原点</strong>：浏览器窗口左上角 <code>(0, 0)</code></li><li><strong>特点</strong>：随文档滚动而变化</li><li><strong>用途</strong>：可见区域内的定位</li></ul><h4>4. 📍 偏移坐标系（Offset）</h4><ul><li><strong>原点</strong>：被检查元素或发生事件的元素左上角</li><li><strong>特点</strong>：相对于目标元素定位</li><li><strong>用途</strong>：元素内部的精确定位</li></ul><h2 id="-background-" tabindex="-1">🎨 Background 背景属性 <a class="header-anchor" href="#-background-" aria-label="Permalink to &quot;🎨 Background 背景属性&quot;">​</a></h2><p>背景属性是 CSS 中最常用的装饰性属性之一，提供了丰富的视觉效果。</p><h3 id="-background-attachment-" tabindex="-1">📎 background-attachment 背景滚动方式 <a class="header-anchor" href="#-background-attachment-" aria-label="Permalink to &quot;📎 background-attachment 背景滚动方式&quot;">​</a></h3><table tabindex="0"><thead><tr><th>值</th><th>说明</th><th>效果</th></tr></thead><tbody><tr><td><code>fixed</code></td><td>背景固定到视口</td><td>始终保持在屏幕相同位置</td></tr><tr><td><code>scroll</code></td><td>背景固定到页面</td><td>跟随页面滚动，元素内容滚动时背景不动</td></tr><tr><td><code>local</code></td><td>背景固定到元素</td><td>滚动元素时，背景随之滚动</td></tr></tbody></table><h3 id="-background-clip-" tabindex="-1">✂️ background-clip 背景裁剪 <a class="header-anchor" href="#-background-clip-" aria-label="Permalink to &quot;✂️ background-clip 背景裁剪&quot;">​</a></h3><p>控制背景的绘制区域范围：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 关键字值 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">background-clip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 延伸至边框外沿 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">background-clip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">padding-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 延伸至内边距外沿 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">background-clip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">content-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 裁剪至内容区外沿 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">background-clip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: text;          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 裁剪成文字形状 */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4>🖼️ 视觉效果对比</h4><p><strong>设置为 <code>border-box</code> 时</strong>： <img src="`+l+'" alt="border-box效果"></p><p><strong>设置为 <code>text</code> 时</strong>： <img src="'+e+`" alt="text效果"></p><div class="tip custom-block"><p class="custom-block-title">💡 创意用法</p><p><code>background-clip: text</code> 可以创建炫酷的文字渐变效果，常用于标题设计。</p></div><h3 id="-background--1" tabindex="-1">📝 background 简写属性 <a class="header-anchor" href="#-background--1" aria-label="Permalink to &quot;📝 background 简写属性&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 语法顺序 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">background: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">background-image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">background-position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]/[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">background-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">background-repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 示例 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">background: red </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">center</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / 400px 200px </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">no-repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="-writing-mode-" tabindex="-1">✍️ Writing-mode 书写模式 <a class="header-anchor" href="#-writing-mode-" aria-label="Permalink to &quot;✍️ Writing-mode 书写模式&quot;">​</a></h2><p>书写模式定义了文本的排列方向，对于国际化和创意布局非常重要。</p><h3 id="--3" tabindex="-1">📊 书写模式配置 <a class="header-anchor" href="#--3" aria-label="Permalink to &quot;📊 书写模式配置&quot;">​</a></h3><table tabindex="0"><thead><tr><th>值</th><th>行内轴方向</th><th>块轴方向</th><th>说明</th></tr></thead><tbody><tr><td><code>horizontal-tb</code></td><td>水平</td><td>从上至下</td><td>默认值，常规横向文本</td></tr><tr><td><code>vertical-rl</code></td><td>纵向</td><td>从右向左</td><td>竖直文本，从右到左排列</td></tr><tr><td><code>vertical-lr</code></td><td>纵向</td><td>从左向右</td><td>竖直文本，从左到右排列</td></tr></tbody></table><h3 id="--4" tabindex="-1">🔄 逻辑属性映射 <a class="header-anchor" href="#--4" aria-label="Permalink to &quot;🔄 逻辑属性映射&quot;">​</a></h3><p>在纵向书写模式下，传统的 <code>width</code> 和 <code>height</code> 需要使用逻辑属性：</p><h4>📏 尺寸属性</h4><table tabindex="0"><thead><tr><th>传统属性</th><th>逻辑属性</th><th>说明</th></tr></thead><tbody><tr><td><code>width</code></td><td><code>inline-size</code></td><td>内联维度尺寸</td></tr><tr><td><code>height</code></td><td><code>block-size</code></td><td>块级维度尺寸</td></tr></tbody></table><h4>📦 间距属性</h4><table tabindex="0"><thead><tr><th>传统属性</th><th>逻辑属性</th></tr></thead><tbody><tr><td><code>margin-top</code></td><td><code>margin-block-start</code></td></tr><tr><td><code>padding-left</code></td><td><code>padding-inline-start</code></td></tr><tr><td><code>border-bottom</code></td><td><code>border-block-end</code></td></tr></tbody></table><h4>🧭 方向值</h4><table tabindex="0"><thead><tr><th>传统值</th><th>逻辑值</th></tr></thead><tbody><tr><td><code>top</code></td><td><code>block-start</code></td></tr><tr><td><code>right</code></td><td><code>inline-end</code></td></tr><tr><td><code>bottom</code></td><td><code>block-end</code></td></tr><tr><td><code>left</code></td><td><code>inline-start</code></td></tr></tbody></table><h2 id="-filter-" tabindex="-1">🎭 Filter 滤镜效果 <a class="header-anchor" href="#-filter-" aria-label="Permalink to &quot;🎭 Filter 滤镜效果&quot;">​</a></h2><p>CSS 滤镜提供了强大的视觉效果处理能力，常用于调整图像、背景和边框的渲染效果。</p><h3 id="-vs-" tabindex="-1">✨ 滤镜 vs 阴影对比 <a class="header-anchor" href="#-vs-" aria-label="Permalink to &quot;✨ 滤镜 vs 阴影对比&quot;">​</a></h3><p>滤镜的 <code>drop-shadow()</code> 函数与 <code>box-shadow</code> 效果相似，但更加精细：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 滤镜阴影 - 跟随元素的确切形状 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">drop-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 盒子阴影 - 仅跟随盒子的矩形边界 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  box-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="`+p+`" alt="滤镜效果对比"></p><p><strong>关键区别</strong>：</p><ul><li><code>drop-shadow</code> 滤镜跟随文本和边框虚线的确切形状</li><li><code>box-shadow</code> 仅跟随盒子的四方形状</li></ul><h3 id="--5" tabindex="-1">🎨 常用滤镜函数 <a class="header-anchor" href="#--5" aria-label="Permalink to &quot;🎨 常用滤镜函数&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 滤镜组合使用 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: blur(5px)           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 模糊 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        brightness(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 亮度 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        contrast(200%)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 对比度 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        drop-shadow(16px 16px 20px blue); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 投影 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* URL 引入 SVG 滤镜 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: url(&#39;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#my-filter&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="--6" tabindex="-1">📋 滤镜函数列表 <a class="header-anchor" href="#--6" aria-label="Permalink to &quot;📋 滤镜函数列表&quot;">​</a></h3><table tabindex="0"><thead><tr><th>函数</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td><code>blur()</code></td><td>高斯模糊</td><td><code>blur(5px)</code></td></tr><tr><td><code>brightness()</code></td><td>亮度调节</td><td><code>brightness(150%)</code></td></tr><tr><td><code>contrast()</code></td><td>对比度</td><td><code>contrast(200%)</code></td></tr><tr><td><code>drop-shadow()</code></td><td>投影</td><td><code>drop-shadow(2px 2px 4px #000)</code></td></tr><tr><td><code>grayscale()</code></td><td>灰度</td><td><code>grayscale(100%)</code></td></tr><tr><td><code>hue-rotate()</code></td><td>色相旋转</td><td><code>hue-rotate(90deg)</code></td></tr><tr><td><code>invert()</code></td><td>反色</td><td><code>invert(100%)</code></td></tr><tr><td><code>opacity()</code></td><td>透明度</td><td><code>opacity(50%)</code></td></tr><tr><td><code>saturate()</code></td><td>饱和度</td><td><code>saturate(200%)</code></td></tr><tr><td><code>sepia()</code></td><td>褐色滤镜</td><td><code>sepia(100%)</code></td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意事项</p><p>如果任何滤镜函数的参数无效，整个 <code>filter</code> 属性将返回 <code>none</code>。</p></div><h2 id="--7" tabindex="-1">🎯 最佳实践 <a class="header-anchor" href="#--7" aria-label="Permalink to &quot;🎯 最佳实践&quot;">​</a></h2><h3 id="--8" tabindex="-1">✅ 推荐做法 <a class="header-anchor" href="#--8" aria-label="Permalink to &quot;✅ 推荐做法&quot;">​</a></h3><ol><li><p><strong>优先级管理</strong></p><ul><li>避免过度使用 <code>!important</code></li><li>合理组织 CSS 选择器结构</li><li>使用级联层管理大型项目</li></ul></li><li><p><strong>嵌套使用</strong></p><ul><li>适度嵌套，避免过深层级</li><li>善用 <code>&amp;</code> 选择器简化代码</li><li>媒体查询嵌套提高可维护性</li></ul></li><li><p><strong>逻辑属性</strong></p><ul><li>在多语言项目中使用逻辑属性</li><li>考虑不同书写模式的兼容性</li></ul></li><li><p><strong>滤镜效果</strong></p><ul><li>注意性能影响，避免过度使用</li><li>组合使用多个滤镜创建复合效果</li></ul></li></ol><h3 id="--9" tabindex="-1">❌ 避免的问题 <a class="header-anchor" href="#--9" aria-label="Permalink to &quot;❌ 避免的问题&quot;">​</a></h3><ul><li>选择器权重过高导致难以覆盖</li><li>过度依赖 <code>!important</code></li><li>忽视不同坐标系的差异</li><li>滤镜参数错误导致整体失效</li></ul><h2 id="--10" tabindex="-1">📚 相关资源 <a class="header-anchor" href="#--10" aria-label="Permalink to &quot;📚 相关资源&quot;">​</a></h2><ul><li><a href="https://www.w3.org/Style/CSS/" target="_blank" rel="noreferrer">CSS 规范文档</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS" target="_blank" rel="noreferrer">MDN CSS 参考</a></li><li><a href="https://caniuse.com/" target="_blank" rel="noreferrer">Can I Use - CSS 兼容性</a></li><li><a href="https://css-tricks.com/" target="_blank" rel="noreferrer">CSS-Tricks</a></li></ul><hr><div class="tip custom-block"><p class="custom-block-title">🚀 继续学习</p><p>掌握了 CSS 基础后，建议深入学习 CSS Grid、Flexbox、动画等高级特性。</p></div>`,79)]))}const u=a(r,[["render",d]]);export{E as __pageData,u as default};
